=== Certificates ===
Alice:
openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:3072 -aes256 -pass pass:alice -out alice.key
openssl req -new -key alice.key -passin pass:alice -sha384 -subj "/CN=Alice.com" -out alice.csr
openssl x509 -req -in alice.csr -CA rootCA.crt -CAkey rootCA.key -CAcreateserial -sha384 -days 3650 -out alice.crt -set_serial 02

Bob:
openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:3072 -aes256 -pass pass:bobkey -out bob.key
openssl req -new -key bob.key -passin pass:bobkey -sha384 -subj "/CN=Bob.com" -out bob.csr
openssl x509 -req -in bob.csr -CA rootCA.crt -CAkey rootCA.key -CAcreateserial -sha384 -days 3650 -out bob.crt -set_serial 03


=== Setup ===
sudo apt install libmbedtls-dev


=== Clean Files ===
find . -type f -name '*:Zone.Identifier' -delete
make clean && make -C crypto_test clean 

=== Crypto Tests ===
Run tests:
(make -C crypto_test clean && make -C crypto_test) && make clean && make && echo ===== START ===== && cd crypto_test/ && ./crypto_test && cd ..

Seperated Compile and run:
(make -C crypto_test clean && make -C crypto_test) && make clean && make
cd crypto_test/ && ./crypto_test && cd ..


=== Client Server ===
Run Server:
./udp_party -port 60000 -key alice.key -pwd alice -cert alice.crt -root rootCA.crt -peer Bob.com
With compilation:
make clean && make && echo ===== START ===== && ./udp_party -port 60000 -key alice.key -pwd alice -cert alice.crt -root rootCA.crt -peer Bob.com

Run Client:
./udp_party -ip 127.0.0.1 -port 60000 -key bob.key -pwd bobkey -cert bob.crt -root rootCA.crt -peer Alice.com

Compilation:
make clean && make


=== Todo ===
1. verify that public key in certificate is the same as the one we received
